# -*- coding: utf-8 -*-
"""Copy of Project_Coupons.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KCVhICDOG2RVhrZU2-3cbo5In0gvkJLz

### Required Assignment 5.1: Will the Customer Accept the Coupon?

**Context**

Imagine driving through town and a coupon is delivered to your cell phone for a restaurant near where you are driving. Would you accept that coupon and take a short detour to the restaurant? Would you accept the coupon but use it on a subsequent trip? Would you ignore the coupon entirely? What if the coupon was for a bar instead of a restaurant? What about a coffee house? Would you accept a bar coupon with a minor passenger in the car? What about if it was just you and your partner in the car? Would weather impact the rate of acceptance? What about the time of day?

Obviously, proximity to the business is a factor on whether the coupon is delivered to the driver or not, but what are the factors that determine whether a driver accepts the coupon once it is delivered to them? How would you determine whether a driver is likely to accept a coupon?

**Overview**

The goal of this project is to use what you know about visualizations and probability distributions to distinguish between customers who accepted a driving coupon versus those that did not.

**Data**

This data comes to us from the UCI Machine Learning repository and was collected via a survey on Amazon Mechanical Turk. The survey describes different driving scenarios including the destination, current time, weather, passenger, etc., and then ask the person whether he will accept the coupon if he is the driver. Answers that the user will drive there ‘right away’ or ‘later before the coupon expires’ are labeled as ‘Y = 1’ and answers ‘no, I do not want the coupon’ are labeled as ‘Y = 0’.  There are five different types of coupons -- less expensive restaurants (under \$20), coffee houses, carry out & take away, bar, and more expensive restaurants (\$20 - $50).

**Deliverables**

Your final product should be a brief report that highlights the differences between customers who did and did not accept the coupons.  To explore the data you will utilize your knowledge of plotting, statistical summaries, and visualization using Python. You will publish your findings in a public facing github repository as your first portfolio piece.

### Data Description
Keep in mind that these values mentioned below are average values.

The attributes of this data set include:
1. User attributes
    -  Gender: male, female
    -  Age: below 21, 21 to 25, 26 to 30, etc.
    -  Marital Status: single, married partner, unmarried partner, or widowed
    -  Number of children: 0, 1, or more than 1
    -  Education: high school, bachelors degree, associates degree, or graduate degree
    -  Occupation: architecture & engineering, business & financial, etc.
    -  Annual income: less than \\$12500, \\$12500 - \\$24999, \\$25000 - \\$37499, etc.
    -  Number of times that he/she goes to a bar: 0, less than 1, 1 to 3, 4 to 8 or greater than 8
    -  Number of times that he/she buys takeaway food: 0, less than 1, 1 to 3, 4 to 8 or greater
    than 8
    -  Number of times that he/she goes to a coffee house: 0, less than 1, 1 to 3, 4 to 8 or
    greater than 8
    -  Number of times that he/she eats at a restaurant with average expense less than \\$20 per
    person: 0, less than 1, 1 to 3, 4 to 8 or greater than 8
    -  Number of times that he/she goes to a bar: 0, less than 1, 1 to 3, 4 to 8 or greater than 8
    

2. Contextual attributes
    - Driving destination: home, work, or no urgent destination
    - Location of user, coupon and destination: we provide a map to show the geographical
    location of the user, destination, and the venue, and we mark the distance between each
    two places with time of driving. The user can see whether the venue is in the same
    direction as the destination.
    - Weather: sunny, rainy, or snowy
    - Temperature: 30F, 55F, or 80F
    - Time: 10AM, 2PM, or 6PM
    - Passenger: alone, partner, kid(s), or friend(s)


3. Coupon attributes
    - time before it expires: 2 hours or one day
"""

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np

"""### Problems

Use the prompts below to get started with your data analysis.  

1. Read in the `coupons.csv` file.



"""

data = pd.read_csv('/content/coupons.csv')

data.head()

data.info()

"""2. Investigate the dataset for missing or problematic data."""

# Check for missing values in each column
missing_values = data.isnull().sum()
missing_percentage = (missing_values / len(data)) * 100

# Display columns with missing values and their percentages
missing_data = pd.DataFrame({'Missing Values': missing_values, 'Percentage': missing_percentage})
missing_data = missing_data[missing_data['Missing Values'] > 0].sort_values(by='Percentage', ascending=False)
print(missing_data)

# Visualize missing data using a heatmap
plt.figure(figsize=(12, 6))
sns.heatmap(data.isnull(), cbar=False, cmap='viridis')
plt.title("Heatmap of Missing Data")
plt.show()

"""3. Decide what to do about your missing data -- drop, replace, other..."""

# Drop 'car' column due to excessive missing values
data = data.drop(columns=['car'])

# Fill missing values in categorical columns with the mode (most frequent value)
categorical_cols = ['Bar', 'CoffeeHouse', 'CarryAway', 'RestaurantLessThan20', 'Restaurant20To50']
for col in categorical_cols:
    data[col].fillna(data[col].mode()[0], inplace=True)

print("Missing values after handling:")
print(data.isnull().sum().sum())  # Should be zero now

"""4. What proportion of the total observations chose to accept the coupon?


"""

# Calculate acceptance proportion
acceptance_rate = data['Y'].mean()
print(f"Proportion of accepted coupons: {acceptance_rate:.2%}")

"""5. Use a bar plot to visualize the `coupon` column."""

# Bar plot for coupon acceptance
plt.figure(figsize=(8, 5))
sns.countplot(x='Y', data=data, palette='Set2')
plt.xticks([0, 1], ['Not Accepted', 'Accepted'])
plt.title('Coupon Acceptance Rate')
plt.xlabel('Acceptance')
plt.ylabel('Count')
plt.show()

"""6. Use a histogram to visualize the temperature column."""

# Histogram for temperature column
plt.figure(figsize=(8, 5))
sns.histplot(data['temperature'], bins=10, kde=True, color='skyblue')
plt.title('Temperature Distribution')
plt.xlabel('Temperature (F)')
plt.ylabel('Frequency')
plt.show()

"""**Investigating the Bar Coupons**

Now, we will lead you through an exploration of just the bar related coupons.  

1. Create a new `DataFrame` that contains just the bar coupons.

"""

# Filter dataset for only 'Bar' coupons
bar_coupons = data[data['coupon'] == 'Bar']
print(f"Number of bar coupon entries: {len(bar_coupons)}")

"""2. What proportion of bar coupons were accepted?

"""

bar_acceptance_rate = bar_coupons['Y'].mean()
print(f"Proportion of accepted bar coupons: {bar_acceptance_rate:.2%}")

"""3. Compare the acceptance rate between those who went to a bar 3 or fewer times a month to those who went more.

"""

# Categorize users into <=3 and >3 bar visits per month
bar_coupons['bar_visit_category'] = bar_coupons['Bar'].apply(lambda x: '<=3' if x in ['never', 'less1', '1~3'] else '>3')

# Acceptance rate comparison
bar_visit_acceptance = bar_coupons.groupby('bar_visit_category')['Y'].mean()
print(bar_visit_acceptance)

# Visualize
plt.figure(figsize=(8, 5))
sns.barplot(x=bar_visit_acceptance.index, y=bar_visit_acceptance.values, palette='Set1')
plt.title('Acceptance Rate by Bar Visit Frequency')
plt.xlabel('Bar Visit Frequency')
plt.ylabel('Acceptance Rate')
plt.show()

"""4. Compare the acceptance rate between drivers who go to a bar more than once a month and are over the age of 25 to the all others.  Is there a difference?

"""

# Filter conditions
condition = (bar_coupons['age'].isin(['26-30', '31-35', '36-40', '41-45', '46-50', '50plus'])) & \
            (bar_coupons['Bar'].isin(['1~3', '4~8', 'gt8']))

over25_bar_visitors_acceptance = bar_coupons[condition]['Y'].mean()
print(f"Acceptance rate (Age > 25 & Bar visits > 1): {over25_bar_visitors_acceptance:.2%}")

"""5. Use the same process to compare the acceptance rate between drivers who go to bars more than once a month and had passengers that were not a kid and had occupations other than farming, fishing, or forestry.

"""

# Filter: bar visits > 1, passengers != 'Kids', occupations != 'farming_fishing_forestry'
filtered = bar_coupons[(bar_coupons['Bar'].isin(['1~3', '4~8', 'gt8'])) &
                       (bar_coupons['passanger'] != 'Kids') &
                       (~bar_coupons['occupation'].isin(['farming_fishing_forestry']))]

acceptance_filtered = filtered['Y'].mean()
print(f"Acceptance rate (No kids & Occupation not farming/fishing/forestry): {acceptance_filtered:.2%}")

"""6. Compare the acceptance rates between those drivers who:

- go to bars more than once a month, had passengers that were not a kid, and were not widowed *OR*
- go to bars more than once a month and are under the age of 30 *OR*
- go to cheap restaurants more than 4 times a month and income is less than 50K.


"""

# Condition 1: Drivers who go to bars more than once a month, had passengers that were not a kid, and were not widowed
condition_1 = (
    (data['Bar'].isin(['1~3', '4~8', 'gt8'])) &  # Bar visits more than once a month
    (data['passanger'] != 'Kids') &              # Passengers not a kid
    (data['maritalStatus'] != 'Widowed')         # Not widowed
)

# Condition 2: Drivers who go to bars more than once a month and are under the age of 30
condition_2 = (
    (data['Bar'].isin(['1~3', '4~8', 'gt8'])) &  # Bar visits more than once a month
    (data['age'].isin(['below21', '21-25', '26-30']))  # Under age 30
)

# Condition 3: Drivers who go to cheap restaurants more than 4 times a month and have income less than $50K
condition_3 = (
    (data['RestaurantLessThan20'].isin(['4~8', 'gt8'])) &  # Visits to cheap restaurants >4 times a month
    (data['income'].isin(['Less than $12500', '$12500 - $24999', '$25000 - $37499', '$37500 - $49999']))  # Income < $50K
)

# Calculate acceptance rates for each condition
acceptance_rate_condition_1 = data[condition_1]['Y'].mean()
acceptance_rate_condition_2 = data[condition_2]['Y'].mean()
acceptance_rate_condition_3 = data[condition_3]['Y'].mean()

# Print acceptance rates
print(f"Acceptance rate (Condition 1): {acceptance_rate_condition_1:.2%}")
print(f"Acceptance rate (Condition 2): {acceptance_rate_condition_2:.2%}")
print(f"Acceptance rate (Condition 3): {acceptance_rate_condition_3:.2%}")

# Visualize acceptance rates with a bar plot
acceptance_rates = {
    'Condition 1': acceptance_rate_condition_1,
    'Condition 2': acceptance_rate_condition_2,
    'Condition 3': acceptance_rate_condition_3
}

plt.figure(figsize=(10, 6))
sns.barplot(x=list(acceptance_rates.keys()), y=list(acceptance_rates.values()), palette='Set2')
plt.title('Acceptance Rates for Different Driver Conditions', fontsize=14)
plt.ylabel('Acceptance Rate', fontsize=12)
plt.xlabel('Conditions', fontsize=12)
plt.ylim(0, 1)
plt.show()

"""7.  Based on these observations, what do you hypothesize about drivers who accepted the bar coupons?"""

### Based on the analysis:

###Frequent bar-goers are more likely to accept bar coupons.
###Age, passenger type, and occupation impact acceptance rates.
###Weather and time of day may also influence acceptance (further analysis possible).

"""### Independent Investigation

Using the bar coupon example as motivation, you are to explore one of the other coupon groups and try to determine the characteristics of passengers who accept the coupons.  
"""









